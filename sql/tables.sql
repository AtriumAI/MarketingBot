create or replace view gforsythe.marketingbot.prospect_test as
select max(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.prospect_id) as unique_prospect, ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.title, ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.prospect_id
from ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW join ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.visit_id = ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.id
where ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.prospect_id is not null
group by ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.title, ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.prospect_id;

-- pipeline webpages with salesforce data
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.WEBPAGE_PIPELINE_SF AS
select TITLE, SUM(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.AMOUNT) as VALUE, MONTH(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE) AS YEAR, 'PIPELINE' AS VARIABLE, 'WEB PAGE' AS MEDIUM from prospect_test
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
on prospect_test.unique_prospect = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID
join ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.crm_contact_fid = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.contact_ID
WHERE ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.FORECAST_CATEGORY_NAME = 'Pipeline'
group by title, MONTH, YEAR;

-- web page won opportunities
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.WEBPAGE_WONOPPORTUNITIES_SF AS
select TITLE, COUNT(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.ID) as VALUE, MONTH(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE) AS YEAR, 'WON OPPORTUNITIES' AS VARIABLE, 'WEB PAGE' AS MEDIUM from prospect_test
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
on prospect_test.unique_prospect = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID
join ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.crm_contact_fid = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.contact_ID
WHERE ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.IS_WON = 'TRUE'
group by title, MONTH, YEAR;

-- campaign pipeline
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.CAMPAIGN_PIPELINE_SF AS 
select ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN.NAME AS TITLE, SUM(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.AMOUNT) as VALUE, MONTH(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE) AS YEAR, 'PIPELINE' AS VARIABLE, 'CAMPAIGN' AS MEDIUM 
from ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN
on ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CAMPAIGN_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN.CUSTOM_CRM_FID
WHERE ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.FORECAST_CATEGORY_NAME = 'Pipeline'
group by ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN.NAME, MONTH, YEAR;

-- Campaign Won Opportunities
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.CAMPAIGN_WONOPPORTUNITIES_SF AS
select ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN.NAME AS TITLE, COUNT(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.ID) as VALUE, MONTH(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE) AS YEAR, 'WON OPPORTUNITIES' AS VARIABLE, 'CAMPAIGN' AS MEDIUM 
from ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN
on ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CAMPAIGN_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN.CUSTOM_CRM_FID
WHERE ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.IS_WON = 'TRUE'
group by ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN.NAME, MONTH, YEAR;

-- Account visits
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.ACCOUNT_VISITS_SF AS 
select COUNT(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.VISIT_ID) AS VALUE, ATRIUM_SALESFORCE.ACCOUNT.NAME AS TITLE, MONTH(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS YEAR, 'VISITS' AS VARIABLE, 'ACCOUNT' AS MEDIUM from ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.VISIT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.ID
JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.PROSPECT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID
JOIN ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.CONTACT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.CRM_CONTACT_FID = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.CONTACT.ID
JOIN ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.ACCOUNT
ON ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.CONTACT.ACCOUNT_ID = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.ACCOUNT.ID
GROUP BY ATRIUM_SALESFORCE.ACCOUNT.NAME, MONTH, YEAR;

-- Account Visitors
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.ACCOUNT_VISITORS_SF AS
select count(distinct(visitor_id)) as value,ATRIUM_SALESFORCE.ACCOUNT.NAME AS TITLE, MONTH(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS YEAR, 'VISITORS' AS VARIABLE, 'ACCOUNT' AS MEDIUM from ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.visit_id =  ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.id
JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.PROSPECT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID
JOIN ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.CONTACT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.CRM_CONTACT_FID = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.CONTACT.ID
JOIN ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.ACCOUNT
ON ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.CONTACT.ACCOUNT_ID = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.ACCOUNT.ID
GROUP BY ATRIUM_SALESFORCE.ACCOUNT.NAME, MONTH, YEAR;

-- Account Conversion doesn't work 

-- CONVERSION RATE WEB PAGE
create or replace view gforsythe.marketingbot.webpage_conversion_dependent as 
select visitor_id, ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.title, MONTH(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS YEAR, crm_contact_fid, crm_lead_fid, case when visitor_id is not null then 1 else 0 end as total, case when crm_contact_fid is not null or crm_lead_fid is not null then 1 else 0 end as converted from ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.visit_id = ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.id
left join ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.prospect_id = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.id;

create or replace table gforsythe.marketingbot.webpage_conversionrate AS
select sum(converted)/sum(total) as VALUE, title AS TITLE, 'CONVERSION RATE' AS VARIABLE, 'WEB PAGE' AS MEDIUM, MONTH AS MONTH, YEAR AS YEAR from gforsythe.marketingbot.webpage_conversion_dependent
group by TITLE, MONTH, YEAR;

-- CONVERSION RATE CAMPAIGN
CREATE OR REPLACE VIEW GFORSYTHE.MARKETINGBOT.CAMPAIGN_CONVERSION AS
SELECT ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN.NAME, ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.VISITOR_ID, CRM_CONTACT_FID, CRM_LEAD_FID, CASE WHEN CRM_CONTACT_FID IS NOT NULL or CRM_LEAD_FID IS NOT NULL THEN 1 ELSE 0 END AS CONVERTED, MONTH(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS YEAR FROM ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW
JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_ACTIVITY
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.VISIT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_ACTIVITY.VISIT_ID
JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN
ON CAMPAIGN_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.CAMPAIGN.ID
JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.VISIT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.ID
LEFT JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.PROSPECT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID;

create or replace table GFORSYTHE.MARKETINGBOT.CAMPAIGN_CONVERSION_RATE as
SELECT SUM(CONVERTED) / COUNT(VISITOR_ID) as VALUE, 'CONVERSION RATE' AS VARIABLE,MONTH, YEAR, 'CAMPAIGN' AS MEDIUM, NAME AS TITLE FROM CAMPAIGN_CONVERSION
GROUP BY TITLE, MONTH, YEAR;

-- CONVERSION RATE WEB PAGES
CREATE OR REPLACE VIEW WEBPAGE_CONVERSION_INTERM AS 
SELECT ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.VISIT_ID,ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_ACTIVITY.VISITOR_ID, TITLE, PROSPECT_ID, CRM_CONTACT_FID, CRM_LEAD_FID, coalesce(CRM_CONTACT_FID,CRM_LEAD_FID) AS CONVERTED, month(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.created_at) as month, year(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.created_at) as year FROM ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW
LEFT JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_ACTIVITY
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.VISIT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_ACTIVITY.VISIT_ID
LEFT JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_ACTIVITY.PROSPECT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID;

-- Opportunity Visitors Won and Loss
create or replace view gforsythe.marketingbot.opportunity_visitors as
select count(distinct(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.visitor_id)) as value,ATRIUM_SALESFORCE.OPPORTUNITY.NAME AS TITLE, MONTH(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT) AS YEAR, 'VISITORS' AS VARIABLE, 'OPPORTUNITY' AS MEDIUM,ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.IS_WON AS WON from ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.visit_id =  ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.id
JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.PROSPECT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID
JOIN ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.CRM_CONTACT_FID = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CONTACT_ID
WHERE ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.IS_CLOSED = TRUE
GROUP BY ATRIUM_SALESFORCE.OPPORTUNITY.NAME, MONTH, YEAR, WON;

-- Visitors within Sales Cycle for Opportunity
CREATE OR REPLACE VIEW GFORSYTHE.MARKETINGBOT.SALESCYCLE_OPPORTUNITY AS
select count(distinct(ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.visitor_id)) as value,ATRIUM_SALESFORCE.OPPORTUNITY.NAME AS TITLE, 'SALES CYCLE' AS VARIABLE, 'OPPORTUNITY' AS MEDIUM from ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.visit_id =  ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.id
JOIN ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISIT.PROSPECT_ID = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID
JOIN ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY
ON ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.CRM_CONTACT_FID = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CONTACT_ID
WHERE ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.IS_CLOSED = TRUE
AND ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT >= ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CREATED_DATE and ATRIUM_RAW_PRD.ATRIUM_PARDOT.VISITOR_PAGE_VIEW.CREATED_AT <= ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CLOSE_DATE
GROUP BY ATRIUM_SALESFORCE.OPPORTUNITY.NAME;

-- Web Page Bookings
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.WEB_PAGE_BOOKINGS_SF AS
select TITLE, SUM(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.AMOUNT) as VALUE, MONTH(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CLOSE_DATE) AS MONTH, YEAR(ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.CLOSE_DATE) AS YEAR, 'BOOKINGS' AS VARIABLE, 'WEB PAGE' AS MEDIUM from GFORSYTHE.MARKETINGBOT.prospect_test
join ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT
on GFORSYTHE.MARKETINGBOT.prospect_test.unique_prospect = ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.ID
join ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY
on ATRIUM_RAW_PRD.ATRIUM_PARDOT.PROSPECT.crm_contact_fid = ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.contact_ID
WHERE ATRIUM_RAW_PRD.ATRIUM_SALESFORCE.OPPORTUNITY.IS_WON = TRUE
group by title, MONTH, YEAR;

CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.WEBPAGE_CONVERSIONRATE AS
SELECT count(distinct(CONVERTED)) / COUNT(DISTINCT(VISITOR_ID))  AS VALUE, TITLE AS TITLE, MONTH, YEAR, 'CONVERSION RATE' AS VARIABLE, 'WEB PAGE' AS MEDIUM FROM WEBPAGE_CONVERSION_INTERM
GROUP BY TITLE, MONTH, YEAR;

-- CREATE FINAL TABLE
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL AS 
SELECT count(distinct(CONVERTED)) / COUNT(DISTINCT(VISITOR_ID))  AS VALUE, TITLE AS TITLE, MONTH, YEAR, 'CONVERSION RATE' AS VARIABLE, 'WEB PAGE' AS MEDIUM FROM WEBPAGE_CONVERSION_INTERM
GROUP BY TITLE, MONTH, YEAR;

-- INSERT INTO TABLE
-- CAMPAIGN CONVERSION RATE
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
  SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.CAMPAIGN_CONVERSION_RATE;

  -- ACCOUNT VISITORS
  INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
  SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.ACCOUNT_VISITORS_SF;

  -- ACCOUNT VISITS
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.ACCOUNT_VISITS_SF;

ALTER TABLE GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL MODIFY VARIABLE VARCHAR(25);
-- CAMPAIGN WON OPPORTUNITIES
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.CAMPAIGN_WONOPPORTUNITIES_SF;

-- CAMPAIGN PIPELINE
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.CAMPAIGN_PIPELINE_SF;

  -- WEB PAGE WON OPPORTUNITIES
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.WEBPAGE_WONOPPORTUNITIES_SF;

-- WEBPAGE PIPELINE
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.WEBPAGE_PIPELINE_SF;
  
-- WEB PAGE VISITS
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.WEBPAGE_VISITS_SF AS 
SELECT TITLE,FINAL_TEST AS TYPE, MONTH(created_at) AS MONTH,year(created_at) AS YEAR, count(*) AS VALUE, 'VISITS' AS VARIABLE, 'WEB PAGE' AS MEDIUM 
FROM GFORSYTHE.MARKETINGBOT.TEST
GROUP BY TITLE,FINAL_TEST,MONTH,YEAR;

INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.WEBPAGE_VISITS_SF;

-- WEB PAGE VISITORS
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.VISITORS;

-- CAMPAIGN VISITS
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.CAMPAIGN_VISITS;

-- CAMPAIGN VISITORS
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.CAMPAIGN_VISITORS;

-- ACCOUNT PIPELINE
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.ACCOUNT_PIPELINE;

-- ACCOUNT WON OPPORTUNITIES
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM
  FROM GFORSYTHE.MARKETINGBOT.ACCOUNT_WONOPPORTUNITIES;

CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL AS
select ROUND(zeroifnull(value),2) AS VALUE, TITLE, MONTH, YEAR, VARIABLE, MEDIUM from marketing_metrics_final;

-- Add WON column
ALTER TABLE GFORSYTHE.marketingbot.MARKETING_METRICS_FINAL
ADD COLUMN WON VARCHAR; 

ALTER TABLE GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL MODIFY VARIABLE VARCHAR(25);
ALTER TABLE GFORSYTHE.MARKETINGBOT.MARKETING_METRICS_FINAL MODIFY MEDIUM VARCHAR(25);

-- Insert Opportunity Visitors 
INSERT INTO GFORSYTHE.marketingbot.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM, WON)
  SELECT
    TITLE,MONTH, YEAR,VALUE,VARIABLE,MEDIUM,WON
  FROM gforsythe.marketingbot.opportunity_visitors;

-- Insert Sales Cycle Opportunity  
INSERT INTO GFORSYTHE.marketingbot.MARKETING_METRICS_FINAL(TITLE, VALUE,VARIABLE,MEDIUM)
  SELECT
    TITLE,VALUE,VARIABLE,MEDIUM
  FROM gforsythe.marketingbot.SALESCYCLE_OPPORTUNITY;

-- Insert Web Page Bookings
INSERT INTO GFORSYTHE.marketingbot.MARKETING_METRICS_FINAL(TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM)
  SELECT
    TITLE,MONTH, YEAR, VALUE,VARIABLE,MEDIUM
  FROM gforsythe.marketingbot.WEB_PAGE_BOOKINGS_SF;

UPDATE GFORSYTHE.marketingbot.MARKETING_METRICS_FINAL
SET WON = UPPER(WON);

SELECT * FROM GFORSYTHE.marketingbot.MARKETING_METRICS_FINAL WHERE WON IS NOT NULL;
-- Attributes table inserts
create or replace table GFORSYTHE.MARKETINGBOT.MARKETING_ATTRIBUTES (VARIABLE VARCHAR, DEFINITION VARCHAR);
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_ATTRIBUTES
    VALUES
    ('VISITS', 'A visit (also called a session) begins when a user arrives on your web page from an external source and ends when they leave the web page. A single user can have multiple visits. Visits are different from unique visitors. Synonyms for visits are activity, accounts is most engaged, or traffic. Example prompt: Which of my accounts is most engaged? Must be filtered to VISITS for VARIABLE.');
    
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_ATTRIBUTES
    VALUES
    ('WON OPPORTUNITIES', 'A won opportunity is a sales prospect that has been successfully converted to a customer. The final stage is closed won and we have aquired a new project for the company. Instead of won opportunities users might use terms such as: closed deal, conversion, victory, or successful sale.');

INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_ATTRIBUTES
    VALUES
    ('PIPELINE', 'Pipeline is the dollar amount estimated as revenue on the open opportunities that are still being work and still have the possibility to close. Pipeline may also be referred to as sales funnel, sales process, deal flow, or projected revenue.');
    
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_ATTRIBUTES
    VALUES
    ('CONVERSION RATE', 'Conversion rate is the rate of visits to contact or lead IDs for the specified medium. The conversion rate measures how successful your medium is at capturing interest. Some synonyms for conversion rate might be Lead generation rate, Contact generation rate, Capture rate, Opt-in rate, or Success rate:');

INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_ATTRIBUTES
    VALUES
    ('VISITORS', 'A visitor is a unique individual who accesses your website. Visitors are identified by their IP Addresses. One visitor can view a web page multiple times, but still count as one visitor. Users might use terms such as people, people are engaged, unique users, unique visitors, impressions, personas, unique personas or prospects. Example prompt: "How many people are engaged with the opportunities we win?" MUST be filtered to VISITORS for VARIABLE.');

INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_ATTRIBUTES
    VALUES
    ('SALES CYCLE', 'A sales cycle begins when an opportunity is created and goes until the opportunity is closed. Users will prompt about people influencing the sales cycle to indicate that VARIABLE should be filtered to SALES CYCLE. If you see sales cycle in the prompt it is an indication to filter VARIABLE to SALES CYCLE and DO NOT filter on WON! Synonyms for sales cycle are life cycle, influencers, customer journey');

INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_ATTRIBUTES
    VALUES
    ('BOOKINGS', 'Bookings refers to the closed won opportunities amount. These are typically recorded when a customer commits to a purchase and can be used to track revenue and forecast future sales. Users will prompt about highest number of bookings to indicate that VARIABLE should be filtered to BOOKINGS. If you see bookings in the prompt it is an indication to filter VARIABLE to BOOKINGS. Bookings is also only on MEDIUM filtered to WEB PAGE. Synonyms for bookings are closed deals, confirmed sales, revenue, won opportunities, won amount, total won amount, and total amount');

-- Medium table inserts
CREATE OR REPLACE TABLE GFORSYTHE.MARKETINGBOT.MARKETING_MEDIUMS (MEDIUM VARCHAR, DESCRIPTION VARCHAR);
INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_MEDIUMS
    VALUES
    ('ACCOUNT', 'an account is a fundamental object that represents an individual customer, partner, competitor, or any other organization that your business interacts with. Users might also use customer, client, partner, organization, accounts or company instead of account, but it means the same thing. If you see any of the above terms you need to filter MEDIUM on ACCOUNT');

INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_MEDIUMS
    VALUES
    ('CAMPAIGN', 'A campaign is a structured marketing initiative designed to achieve specific goals, such as lead generation, product promotion, or brand awareness. Users might also use marketing initiative, marketing program, promotion, outreach, campaigns or drive instead of campaign, but it means the same thing. If you see any of the above terms you need to filter MEDIUM on CAMPAIGN');

INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_MEDIUMS
    VALUES
    ('WEB PAGE', 'A web page is a single, uniquely addressable unit of content on our company website. It is a digital asset crafted to deliver information, promote products or services,  or facilitate interaction with visitors. Users might use page, site page, website, web pages or landing page instead of web page, but it means the same thing. If you see any of the above terms you need to filter MEDIUM on WEB PAGE');

INSERT INTO GFORSYTHE.MARKETINGBOT.MARKETING_MEDIUMS (MEDIUM, DESCRIPTION)
    VALUES
    ('OPPORTUNITY', 'An opportunity or opportunities represents a potential sales deal with a prospective customer. Users might use opportunities, deal or deals instead of opportunity, but it means the same thing. Example prompt: "How many people are engaged with the opportunities we win?". If you see any of the above terms you MUST filter MEDIUM on OPPORTUNITY');